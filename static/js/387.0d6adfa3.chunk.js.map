{"version":3,"file":"static/js/387.0d6adfa3.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,GAAAA,GAAH,+CAGVC,EAAaD,EAAAA,GAAAA,GAAH,kDAGVE,EAASF,EAAAA,GAAAA,EAAH,+C,SC4BnB,EA7BgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,MAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACwBC,EAAAA,EAAAA,IAAeN,GADvC,OACQG,EADR,OAEEC,EAAUD,GAFZ,2CADc,yBAAC,WAAD,wBAKdI,EACD,GAAE,CAACP,IACCG,EAGEA,EAAQK,OAAS,GACtB,SAACC,EAAA,EAAD,WACE,SAACb,EAAD,UACGO,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACf,EAAD,YACE,UAACC,EAAD,sBAAiBa,MACjB,uBAAIC,MAFWF,EADN,SASjB,sCAdO,IAgBV,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewList = styled.ul`\n    list-style: none;\n`\nexport const ReviewItem = styled.li`\n    margin-bottom: 30px;\n`\nexport const Author = styled.p`\n    font-weight: 700;\n`","import { Box } from 'components/Box';\nimport { getReviewsById } from 'components/services/api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Author, ReviewItem, ReviewList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReview] = useState(null);\n  useEffect(() => {\n    async function getReviews() {\n      const reviews = await getReviewsById(movieId);\n      setReview(reviews);\n    }\n    getReviews();\n  }, [movieId]);\n  if (!reviews) {\n    return null;\n  }\n  return reviews.length > 0 ? (\n    <Box>\n      <ReviewList>\n        {reviews.map(({ id, author, content }) => (\n          <ReviewItem key={id}>\n            <Author>Author: {author}</Author>\n            <p>{content}</p>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </Box>\n  ) : (\n    <p>No Reviews</p>\n  );\n};\n\nexport default Reviews"],"names":["ReviewList","styled","ReviewItem","Author","movieId","useParams","useState","reviews","setReview","useEffect","getReviewsById","getReviews","length","Box","map","id","author","content"],"sourceRoot":""}